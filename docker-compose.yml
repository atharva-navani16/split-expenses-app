version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: splitapp_db
    environment:
      POSTGRES_DB: splitapp
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d splitapp"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - splitapp-network

  backend:
    build: ./backend
    container_name: splitapp_backend
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/splitapp
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./frontend:/app/frontend
    networks:
      - splitapp-network

  web:
    build: ./backend
    container_name: splitapp_web
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/splitapp
    depends_on:
      - db
      - backend
    volumes:
      - ./frontend:/app/frontend
    restart: unless-stopped
    networks:
      - splitapp-network

volumes:
  postgres_data:

networks:
  splitapp-network:
    driver: bridge